{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","login","logout","NewPlace","auth","useContext","title","description","address","inputHandler","history","useHistory","placeSubmitHandler","JSON","stringify","creator","Map","mapRef","center","zoom","window","google","maps","Marker","position","ref","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","PlaceList","place","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","placeUpdateSubmitHandler","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setIsLoggedIn","setUserId","uid","path","Provider","render"],"mappings":"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","file":"static/js/main.6623d341.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar image={props.image} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users'\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        'http://localhost:5000/api/places',\n        'POST',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n          address: formState.inputs.address.value,\n          creator: auth.userId\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `http://localhost:5000/api/places/${props.id}`,\n        'DELETE'\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={props.image} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5000/api/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5000/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `http://localhost:5000/api/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json'\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users/signup',\n          'POST',\n          JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useState, useCallback } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback(uid => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n  }, []);\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []);\n\n  let routes;\n\n  if (isLoggedIn) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}